|controller
clk => clk.IN2
reset => reset.IN2
Instr[12] => Equal2.IN3
Instr[13] => Equal2.IN2
Instr[14] => Equal2.IN1
Instr[15] => Equal2.IN0
Instr[16] => ~NO_FANOUT~
Instr[17] => ~NO_FANOUT~
Instr[18] => ~NO_FANOUT~
Instr[19] => ~NO_FANOUT~
Instr[20] => Selector3.IN3
Instr[20] => Selector4.IN1
Instr[21] => Mux0.IN19
Instr[21] => Decoder0.IN3
Instr[22] => Mux0.IN18
Instr[22] => Mux1.IN10
Instr[22] => Decoder0.IN2
Instr[23] => Mux0.IN17
Instr[23] => Mux1.IN9
Instr[23] => Decoder0.IN1
Instr[24] => Mux0.IN16
Instr[24] => Mux1.IN8
Instr[24] => Decoder0.IN0
Instr[25] => ~NO_FANOUT~
Instr[26] => Equal1.IN3
Instr[27] => Equal1.IN2
Instr[28] => ~NO_FANOUT~
Instr[29] => ~NO_FANOUT~
Instr[30] => ~NO_FANOUT~
Instr[31] => ~NO_FANOUT~
CO => ALUFlags[1].IN1
N => ALUFlags[3].IN1
Z => ALUFlags[2].IN1
OVF => ALUFlags[0].IN1
MemWrite <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
PCsrc <= PCsrc.DB_MAX_OUTPUT_PORT_TYPE
LR <= LR$latch.DB_MAX_OUTPUT_PORT_TYPE
RegWrite <= RegWrite$latch.DB_MAX_OUTPUT_PORT_TYPE
MemtoReg[0] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
MemtoReg[1] <= <GND>
ALUSrc <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
RegSrc <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
ALUControl[0] <= ALUControl.DB_MAX_OUTPUT_PORT_TYPE
ALUControl[1] <= <GND>
ALUControl[2] <= ALUControl.DB_MAX_OUTPUT_PORT_TYPE
Flags[0] <= Reg_WE:flagreg0.port4
Flags[1] <= Reg_WE:flagreg0.port4
Flags[2] <= Reg_WE:flagreg1.port4
Flags[3] <= Reg_WE:flagreg1.port4


|controller|Reg_WE:flagreg1
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
we => out.OUTPUTSELECT
we => out.OUTPUTSELECT
data[0] => out.DATAB
data[1] => out.DATAB
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|controller|Reg_WE:flagreg0
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
we => out.OUTPUTSELECT
we => out.OUTPUTSELECT
data[0] => out.DATAB
data[1] => out.DATAB
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


